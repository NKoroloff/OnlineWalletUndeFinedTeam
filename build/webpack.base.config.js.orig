const path = require('path')
const MiniCssExtractPlugin = require('mini-css-extract-plugin')
const CopyWebpackPlugin = require('copy-webpack-plugin')
const HtmlWebpackPlugin = require('html-webpack-plugin')

const PATHS = {
    src: path.join(__dirname, '../src'),
    dist: path.join(__dirname, '../dist'),
    assets: 'assets/'
}

module.exports = {

    externals: {
        paths: PATHS
    },
    entry: {
        app: `${PATHS.src}/index.js`,
        dashboard: `${PATHS.src}/dashboard.js`,
    },
    output: {
        filename:`${PATHS.assets}/js/[name].js`,
        path: PATHS.dist,
        publicPath: "/"
    },
    module:{
        rules:[
            {
                test: /\.(woff(2)?|ttf|eot)(\?v=\d+\.\d+\.\d+)?$/,
                loader: 'file-loader',
                options: {
                    name: 'assets/fonts/[name].[ext]'
                }
            },
            {
                test: /test\.js$/,
                use: 'mocha-loader',
                exclude: /node_modules/,
            }, {
                test:/\.(png|jpg|gif|svg)$/,
                loader: 'url-loader',
                options: {
                    name: 'img/[name].[ext]',
                    limit: 50000
                }
            },{
                test:/\.js$/,
                loader: 'babel-loader',
                exclude: '/node_modules/',
            },{
                test: /\.less$/,

                use:[
                    'style-loader',
                    MiniCssExtractPlugin.loader,
                    {
                        loader: 'css-loader',
                        options: {
                            sourceMap: true,
                        },
                    }, {
                        loader: 'less-loader',
                        options: { sourceMap: true }
                    }, {
                        loader: 'postcss-loader',
                        options: { sourceMap: true , config: {path: `${PATHS.src}/js/postcss.config.js`} }
                    }
                ]
            },{
                test: /\.css$/,
                use: [
                    'style-loader',
                    MiniCssExtractPlugin.loader,
                    {
                        loader: 'css-loader',
                        options: {
                            sourceMap: true,
                        },
                    }, {
                        loader: 'less-loader',
                        options: { sourceMap: true }
                    }, {
                        loader: 'postcss-loader',
                        options: { sourceMap: true , config: {path: `${PATHS.src}/js/postcss.config.js`} }
                    },
                ],

            }]
    },
    devServer: {
        overlay: true
    },
    plugins: [
        new MiniCssExtractPlugin({
            filename: `${PATHS.assets}/css/[name].css`,
        }),
        new HtmlWebpackPlugin({
            hash: false,
            template: `${PATHS.src}/index.html`,
            filename: "./index.html",
            inject: false,
            excludeChunks: ['dashboard'],
        }),
        new HtmlWebpackPlugin({
            template: `${PATHS.src}/dashboard.html`,
            filename: "./dashboard.html",
            inject: false,
            chunks: ['dashboard'],
        }),
        new CopyWebpackPlugin([
            {from: `${PATHS.src}/img` ,to: `${PATHS.assets}/img`},
            {from: `${PATHS.src}/fonts` ,to: `${PATHS.assets}/fonts`},
            {from: `${PATHS.src}/static` ,to: `${PATHS.assets}/static`},
        ]),

    ],
}
